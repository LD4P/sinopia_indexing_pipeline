# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#

defaults: &defaults
  docker:
    - image: circleci/node:10.15.3
  working_directory: ~/sinopia_indexing_pipeline

version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - dependencies-
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: dependencies-{{ checksum "package.json" }}
      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Lint and run unit tests
          command: |
            ./cc-test-reporter before-build
            npm run ci
            ./cc-test-reporter after-build --exit-code $?
      - run:
          name: Run integration tests
          command: docker-compose run integration
  register_image:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          key: dependencies-{{ checksum "package.json" }}
      - attach_workspace:
          at: .
      - run:
          name: Build & push docker image
          # NOTE: the env variables holding docker credentials are stored in the CircleCI dashboard
          command: |
            docker build -t ld4p/sinopia_indexing_pipeline:latest .
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            docker push ld4p/sinopia_indexing_pipeline:latest
  update_ecs:
    working_directory: ~/sinopia_indexing_pipeline
    docker: # NOT the default
      - image: circleci/python:3.7-stretch-node-browsers
    steps:
      - run: sudo pip install awscli
      - run:
          name: Update AWS ECS
          command: |
            mkdir ~/.aws
            echo -e "[circle]\naws_access_key_id=$AWS_ACCESS_KEY_ID\naws_secret_access_key=$AWS_SECRET_ACCESS_KEY\n" > ~/.aws/credentials
            unset AWS_SESSION_TOKEN
            aws configure set region us-west-2
            aws configure set output json
            temp_creds=$(aws sts assume-role --role-session-name DevelopersRole --role-arn $DEV_ROLE_ARN --profile circle | jq .Credentials)
            export AWS_ACCESS_KEY_ID=$(echo "$temp_creds" | jq .AccessKeyId | xargs)
            export AWS_SECRET_ACCESS_KEY=$(echo "$temp_creds" | jq .SecretAccessKey | xargs)
            export AWS_SESSION_TOKEN=$(echo "$temp_creds" | jq .SessionToken | xargs)
            aws configure list # Show confirmation of config
            task_arn=$(aws ecs list-task-definitions --family-prefix sinopia-indexing --region us-west-2 --sort DESC --max-items 1 | jq --raw-output --exit-status '.taskDefinitionArns[]')
            cluster_arn=$(aws ecs list-clusters --region us-west-2 | jq --raw-output --exit-status '.clusterArns[] | select(contains(":cluster/sinopia-dev"))')
            # echo -n "task_arn=$task_arn\ncluster_arn=$cluster_arn\n"
            aws ecs update-service --service sinopia-indexing --region us-west-2 --cluster $cluster_arn --task-definition $task_arn --force-new-deployment

workflows:
  version: 2
  build:
    jobs:
      - build
      - register_image:
          requires:
            - build
          filters:
            branches:
              only:
                - master
      - update_ecs:
          requires:
            - register_image
